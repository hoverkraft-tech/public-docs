# Reusable workflow that bundles project docs and triggers public portal sync
#
# - Collects README and docs markdown, adds sync metadata, and uploads a short-lived artifact
# - Dispatches a repository event so hoverkraft-tech/public-docs can ingest and publish updates
---
name: Push Documentation Helper

on:
  workflow_call:
    inputs:
      github-app-id:
        description: |
          GitHub App ID to generate GitHub token in place of github-token.
          See https://github.com/actions/create-github-app-token.
        required: false
        type: string
      artifact-id:
        description: |
          ID of the uploaded documentation artifact.
        required: true
        type: string
    secrets:
      github-app-key:
        description: |
          GitHub App private key to generate GitHub token in place of github-token.
          See https://github.com/actions/create-github-app-token.

jobs:
  prepare-and-dispatch:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - uses: actions/create-github-app-token@67018539274d69449ef7c02e8e71183d1719ab42 # v2.1.4
        id: generate-token
        with:
          app-id: ${{ inputs.github-app-id }}
          private-key: ${{ secrets.github-app-key }}
          owner: ${{ github.repository_owner }}

      - name: Dispatch to public-docs
        uses: peter-evans/repository-dispatch@5fc4efd1a4797ddb68ffd0714a238564e4cc0e6f # v4.0.0
        with:
          token: ${{ steps.generate-token.outputs.token }}
          repository: hoverkraft-tech/public-docs
          event-type: sync-documentation
          client-payload: |
            {
              "repository": "${{ github.repository }}",
              "run-id": "${{ github.run_id }}",
              "artifact-id": "${{ inputs.artifact-id }}"
            }

      - name: Summary
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
        env:
          ARTIFACT_ID: ${{ inputs.artifact-id }}
          SOURCE_REPO: ${{ github.repository }}
          RUN_ID: ${{ github.run_id }}
        with:
          script: |
            await core.summary
              .addHeading('Documentation Dispatch Summary', 2)
              .addRaw('\n')
              .addList([
                `**Repository**: ${process.env.SOURCE_REPO}`,
                `**Run ID**: ${process.env.RUN_ID}`,
                `**Artifact ID**: ${process.env.ARTIFACT_ID}`,
              ])
              .addRaw('\n')
              .addRaw('The public-docs repository will download the artifact and process the documentation within an isolated workflow.')
              .write();
